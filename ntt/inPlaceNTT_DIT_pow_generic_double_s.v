// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.3 (64-bit)
// Version: 2020.3
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module inPlaceNTT_DIT_pow_generic_double_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        exp,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] exp;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_pp0_stage0_11001;
wire   [7:0] pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_address0;
reg    pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0;
wire   [57:0] pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_q0;
wire   [7:0] pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address0;
reg    pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0;
wire   [25:0] pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q0;
wire   [7:0] pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address1;
reg    pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce1;
wire   [25:0] pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q1;
wire   [7:0] pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address0;
reg    pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0;
wire   [41:0] pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q0;
wire   [0:0] p_Result_7_fu_267_p3;
reg   [0:0] p_Result_7_reg_1249;
reg   [0:0] p_Result_7_reg_1249_pp0_iter1_reg;
reg   [0:0] p_Result_7_reg_1249_pp0_iter2_reg;
reg   [0:0] p_Result_7_reg_1249_pp0_iter3_reg;
reg   [0:0] p_Result_7_reg_1249_pp0_iter4_reg;
reg   [0:0] p_Result_7_reg_1249_pp0_iter5_reg;
reg   [0:0] p_Result_7_reg_1249_pp0_iter6_reg;
reg   [0:0] p_Result_7_reg_1249_pp0_iter7_reg;
reg   [0:0] p_Result_7_reg_1249_pp0_iter8_reg;
reg   [0:0] p_Result_7_reg_1249_pp0_iter9_reg;
reg   [0:0] p_Result_7_reg_1249_pp0_iter10_reg;
reg   [0:0] p_Result_7_reg_1249_pp0_iter11_reg;
reg   [10:0] tmp_16_reg_1256;
reg   [10:0] tmp_16_reg_1256_pp0_iter1_reg;
wire   [0:0] icmp_ln824_1_fu_289_p2;
reg   [0:0] icmp_ln824_1_reg_1264;
reg   [0:0] icmp_ln824_1_reg_1264_pp0_iter1_reg;
reg   [0:0] icmp_ln824_1_reg_1264_pp0_iter2_reg;
reg   [0:0] icmp_ln824_1_reg_1264_pp0_iter3_reg;
reg   [0:0] icmp_ln824_1_reg_1264_pp0_iter4_reg;
reg   [0:0] icmp_ln824_1_reg_1264_pp0_iter5_reg;
reg   [0:0] icmp_ln824_1_reg_1264_pp0_iter6_reg;
reg   [0:0] icmp_ln824_1_reg_1264_pp0_iter7_reg;
reg   [0:0] icmp_ln824_1_reg_1264_pp0_iter8_reg;
reg   [0:0] icmp_ln824_1_reg_1264_pp0_iter9_reg;
reg   [0:0] icmp_ln824_1_reg_1264_pp0_iter10_reg;
reg   [0:0] icmp_ln824_1_reg_1264_pp0_iter11_reg;
wire   [53:0] e_frac_V_2_fu_309_p3;
reg  signed [53:0] e_frac_V_2_reg_1270;
wire  signed [119:0] m_frac_l_V_fu_320_p2;
reg  signed [119:0] m_frac_l_V_reg_1275;
reg  signed [119:0] m_frac_l_V_reg_1275_pp0_iter2_reg;
reg  signed [119:0] m_frac_l_V_reg_1275_pp0_iter3_reg;
reg  signed [119:0] m_frac_l_V_reg_1275_pp0_iter4_reg;
reg  signed [119:0] m_frac_l_V_reg_1275_pp0_iter5_reg;
reg  signed [119:0] m_frac_l_V_reg_1275_pp0_iter6_reg;
reg  signed [119:0] m_frac_l_V_reg_1275_pp0_iter7_reg;
reg  signed [119:0] m_frac_l_V_reg_1275_pp0_iter8_reg;
reg  signed [119:0] m_frac_l_V_reg_1275_pp0_iter9_reg;
reg  signed [119:0] m_frac_l_V_reg_1275_pp0_iter10_reg;
reg  signed [119:0] m_frac_l_V_reg_1275_pp0_iter11_reg;
wire   [0:0] y_is_0_fu_335_p2;
reg   [0:0] y_is_0_reg_1284;
reg   [0:0] y_is_0_reg_1284_pp0_iter3_reg;
reg   [0:0] y_is_0_reg_1284_pp0_iter4_reg;
reg   [0:0] y_is_0_reg_1284_pp0_iter5_reg;
reg   [0:0] y_is_0_reg_1284_pp0_iter6_reg;
reg   [0:0] y_is_0_reg_1284_pp0_iter7_reg;
reg   [0:0] y_is_0_reg_1284_pp0_iter8_reg;
reg   [0:0] y_is_0_reg_1284_pp0_iter9_reg;
reg   [0:0] y_is_0_reg_1284_pp0_iter10_reg;
reg   [0:0] y_is_0_reg_1284_pp0_iter11_reg;
wire   [0:0] icmp_ln824_fu_340_p2;
reg   [0:0] icmp_ln824_reg_1290;
reg   [0:0] icmp_ln824_reg_1290_pp0_iter3_reg;
reg   [0:0] icmp_ln824_reg_1290_pp0_iter4_reg;
reg   [0:0] icmp_ln824_reg_1290_pp0_iter5_reg;
reg   [0:0] icmp_ln824_reg_1290_pp0_iter6_reg;
reg   [0:0] icmp_ln824_reg_1290_pp0_iter7_reg;
reg   [0:0] icmp_ln824_reg_1290_pp0_iter8_reg;
reg   [0:0] icmp_ln824_reg_1290_pp0_iter9_reg;
reg   [0:0] icmp_ln824_reg_1290_pp0_iter10_reg;
reg   [0:0] icmp_ln824_reg_1290_pp0_iter11_reg;
reg   [0:0] p_Result_9_reg_1296;
reg   [0:0] p_Result_9_reg_1296_pp0_iter3_reg;
reg   [58:0] trunc_ln2_reg_1306;
reg   [58:0] trunc_ln2_reg_1306_pp0_iter3_reg;
reg   [58:0] trunc_ln2_reg_1306_pp0_iter4_reg;
reg   [58:0] trunc_ln2_reg_1306_pp0_iter5_reg;
wire   [0:0] icmp_ln657_fu_560_p2;
reg   [0:0] icmp_ln657_reg_1311;
reg   [0:0] icmp_ln657_reg_1311_pp0_iter3_reg;
reg   [0:0] icmp_ln657_reg_1311_pp0_iter4_reg;
reg   [0:0] icmp_ln657_reg_1311_pp0_iter5_reg;
reg   [0:0] icmp_ln657_reg_1311_pp0_iter6_reg;
reg   [0:0] icmp_ln657_reg_1311_pp0_iter7_reg;
reg   [0:0] icmp_ln657_reg_1311_pp0_iter8_reg;
reg   [0:0] icmp_ln657_reg_1311_pp0_iter9_reg;
reg   [0:0] icmp_ln657_reg_1311_pp0_iter10_reg;
reg   [0:0] icmp_ln657_reg_1311_pp0_iter11_reg;
wire   [0:0] icmp_ln1453_fu_566_p2;
reg   [0:0] icmp_ln1453_reg_1316;
reg   [0:0] icmp_ln1453_reg_1316_pp0_iter3_reg;
reg   [0:0] icmp_ln1453_reg_1316_pp0_iter4_reg;
reg   [0:0] icmp_ln1453_reg_1316_pp0_iter5_reg;
reg   [0:0] icmp_ln1453_reg_1316_pp0_iter6_reg;
reg   [0:0] icmp_ln1453_reg_1316_pp0_iter7_reg;
reg   [0:0] icmp_ln1453_reg_1316_pp0_iter8_reg;
reg   [0:0] icmp_ln1453_reg_1316_pp0_iter9_reg;
reg   [0:0] icmp_ln1453_reg_1316_pp0_iter10_reg;
reg   [0:0] icmp_ln1453_reg_1316_pp0_iter11_reg;
wire  signed [12:0] ret_V_8_fu_622_p3;
reg  signed [12:0] ret_V_8_reg_1326;
reg  signed [12:0] ret_V_8_reg_1326_pp0_iter6_reg;
reg  signed [12:0] ret_V_8_reg_1326_pp0_iter7_reg;
reg  signed [12:0] ret_V_8_reg_1326_pp0_iter8_reg;
reg  signed [12:0] ret_V_8_reg_1326_pp0_iter9_reg;
reg  signed [12:0] ret_V_8_reg_1326_pp0_iter10_reg;
reg  signed [12:0] ret_V_8_reg_1326_pp0_iter11_reg;
reg   [7:0] m_diff_hi_V_reg_1333;
reg   [7:0] m_diff_hi_V_reg_1333_pp0_iter7_reg;
reg   [7:0] m_diff_hi_V_reg_1333_pp0_iter8_reg;
reg   [7:0] Z2_V_reg_1338;
reg   [7:0] Z2_V_reg_1338_pp0_iter7_reg;
reg   [7:0] Z2_V_reg_1338_pp0_iter8_reg;
reg   [7:0] Z2_V_reg_1338_pp0_iter9_reg;
wire   [7:0] Z3_V_fu_674_p4;
reg   [7:0] Z3_V_reg_1345;
reg   [7:0] Z3_V_reg_1345_pp0_iter7_reg;
wire   [34:0] Z4_fu_684_p1;
reg   [34:0] Z4_reg_1350;
wire   [35:0] ret_V_9_fu_725_p2;
reg   [35:0] ret_V_9_reg_1365;
reg   [25:0] f_Z3_reg_1371;
wire   [42:0] ret_V_10_fu_731_p4;
reg   [42:0] ret_V_10_reg_1376;
wire   [35:0] add_ln657_fu_766_p2;
reg   [35:0] add_ln657_reg_1381;
wire   [43:0] exp_Z2P_m_1_V_fu_785_p2;
reg   [43:0] exp_Z2P_m_1_V_reg_1396;
wire   [39:0] tmp_4_fu_791_p4;
reg   [39:0] tmp_4_reg_1401;
reg   [35:0] trunc_ln657_5_reg_1406;
reg   [57:0] exp_Z1_V_reg_1411;
reg   [57:0] exp_Z1_V_reg_1411_pp0_iter11_reg;
reg   [49:0] exp_Z1P_m_1_V_reg_1416;
reg   [49:0] exp_Z1_hi_V_reg_1421;
wire   [99:0] r_V_19_fu_892_p2;
reg   [99:0] r_V_19_reg_1426;
wire    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln488_1_fu_698_p1;
wire   [63:0] zext_ln488_2_fu_703_p1;
wire   [63:0] zext_ln488_3_fu_771_p1;
wire   [63:0] zext_ln488_fu_775_p1;
wire   [63:0] data_V_fu_263_p1;
wire   [51:0] tmp_17_fu_285_p1;
wire   [53:0] p_Result_8_fu_295_p3;
wire   [53:0] e_frac_V_1_fu_303_p2;
wire   [66:0] m_frac_l_V_fu_320_p1;
wire   [11:0] zext_ln510_fu_326_p1;
wire  signed [11:0] m_exp_fu_329_p2;
wire  signed [10:0] sub_ln1311_fu_359_p2;
wire   [0:0] isNeg_fu_351_p3;
wire  signed [11:0] sext_ln1311_fu_364_p1;
wire   [11:0] ush_fu_368_p3;
wire  signed [31:0] sh_prom_i_i429_cast_cast_cast_fu_376_p1;
wire   [119:0] sh_prom_i_i429_cast_cast_castcast_fu_384_p1;
wire   [119:0] r_V_fu_388_p2;
wire  signed [130:0] sext_ln568_fu_345_p1;
wire   [130:0] sh_prom_i_i429_cast_cast_cast_cast_fu_380_p1;
wire   [130:0] r_V_1_fu_397_p2;
wire  signed [129:0] sext_ln1286_fu_393_p1;
wire   [129:0] trunc_ln1286_1_fu_403_p1;
wire   [129:0] m_fix_l_fu_407_p3;
wire   [129:0] sh_prom_i_i402_cast_cast_cast_cast_fu_415_p1;
wire   [129:0] r_V_2_fu_419_p2;
wire   [129:0] r_V_3_fu_425_p2;
wire  signed [31:0] sext_ln1253_fu_447_p1;
wire   [130:0] zext_ln1253_fu_451_p1;
wire   [130:0] r_V_5_fu_455_p2;
wire   [0:0] isNeg_1_fu_465_p3;
wire   [11:0] ush_2_fu_473_p3;
wire  signed [31:0] sext_ln1253_1_fu_481_p1;
wire   [130:0] zext_ln1253_1_fu_485_p1;
wire   [130:0] r_V_6_fu_489_p2;
wire   [119:0] sext_ln1253_1cast_fu_499_p1;
wire   [119:0] r_V_7_fu_503_p2;
wire   [129:0] trunc_ln1252_fu_495_p1;
wire  signed [129:0] sext_ln1252_fu_508_p1;
wire   [0:0] tmp_7_fu_439_p3;
wire   [129:0] r_V_8_fu_512_p3;
wire   [129:0] trunc_ln1286_2_fu_461_p1;
wire   [129:0] select_ln578_fu_520_p3;
wire  signed [15:0] m_fix_hi_V_fu_528_p4;
wire   [129:0] r_V_17_fu_431_p3;
wire  signed [129:0] sext_ln568_1_fu_348_p1;
wire  signed [18:0] rhs_fu_572_p3;
wire  signed [30:0] grp_fu_1238_p3;
wire   [17:0] trunc_ln805_fu_599_p1;
wire   [12:0] ret_V_cast_fu_583_p4;
wire   [0:0] icmp_ln805_fu_602_p2;
wire   [12:0] ret_V_fu_608_p2;
wire   [0:0] p_Result_s_fu_592_p3;
wire   [12:0] select_ln804_fu_614_p3;
wire   [70:0] r_V_12_fu_633_p2;
wire   [58:0] trunc_ln657_1_fu_639_p4;
wire   [58:0] m_diff_V_fu_649_p2;
wire   [7:0] Z4_ind_fu_688_p4;
wire   [9:0] r_fu_708_p4;
wire   [35:0] zext_ln657_fu_718_p1;
wire   [35:0] zext_ln657_1_fu_721_p1;
wire   [42:0] r_V_14_fu_746_p0;
wire   [35:0] r_V_14_fu_746_p1;
wire   [78:0] r_V_14_fu_746_p2;
wire   [19:0] trunc_ln657_4_fu_752_p4;
wire   [35:0] zext_ln657_2_fu_762_p1;
wire   [43:0] zext_ln657_3_fu_782_p1;
wire   [43:0] zext_ln1146_fu_779_p1;
wire   [48:0] exp_Z2_m_1_V_fu_801_p4;
wire   [48:0] r_V_15_fu_818_p0;
wire   [43:0] r_V_15_fu_818_p1;
wire   [92:0] r_V_15_fu_818_p2;
wire   [50:0] lhs_V_1_fu_834_p5;
wire   [43:0] zext_ln657_4_fu_848_p1;
wire   [43:0] add_ln657_2_fu_851_p2;
wire   [51:0] zext_ln657_5_fu_856_p1;
wire   [51:0] zext_ln1146_1_fu_844_p1;
wire   [51:0] exp_Z1P_m_1_l_V_fu_860_p2;
wire   [49:0] r_V_19_fu_892_p0;
wire   [49:0] r_V_19_fu_892_p1;
wire   [0:0] xor_ln828_fu_902_p2;
wire   [0:0] y_is_NaN_fu_907_p2;
wire   [0:0] y_is_inf_fu_898_p2;
wire   [57:0] ret_V_11_fu_934_p2;
wire   [56:0] trunc_ln1146_fu_953_p1;
wire   [55:0] trunc_ln1146_2_fu_968_p1;
wire   [106:0] lhs_V_4_fu_939_p3;
wire   [106:0] zext_ln1146_2_fu_947_p1;
wire   [104:0] trunc_ln1146_1_fu_972_p3;
wire   [104:0] zext_ln1146_4_fu_965_p1;
wire   [105:0] trunc_ln3_fu_957_p3;
wire   [105:0] zext_ln1146_3_fu_950_p1;
wire   [106:0] ret_V_6_fu_980_p2;
wire   [0:0] tmp_11_fu_998_p3;
wire   [12:0] r_exp_V_fu_1006_p2;
wire   [12:0] r_exp_V_2_fu_1011_p3;
wire   [2:0] tmp_13_fu_1022_p4;
wire   [0:0] and_ln657_fu_1018_p2;
wire   [0:0] icmp_ln840_fu_1032_p2;
wire   [0:0] tmp_14_fu_1044_p3;
wire   [105:0] add_ln1146_2_fu_992_p2;
wire   [104:0] add_ln1146_1_fu_986_p2;
wire   [51:0] tmp_fu_1065_p4;
wire   [51:0] tmp_1_fu_1075_p4;
wire   [10:0] trunc_ln167_fu_1093_p1;
wire   [10:0] out_exp_V_fu_1097_p2;
wire   [51:0] tmp_18_fu_1085_p3;
wire   [63:0] p_Result_10_fu_1103_p4;
wire   [0:0] or_ln407_fu_912_p2;
wire   [0:0] xor_ln460_fu_1123_p2;
wire   [0:0] and_ln467_fu_929_p2;
wire   [0:0] xor_ln407_fu_1117_p2;
wire   [0:0] xor_ln467_fu_1134_p2;
wire   [0:0] and_ln467_1_fu_1140_p2;
wire   [0:0] or_ln460_fu_1129_p2;
wire   [0:0] and_ln467_2_fu_1146_p2;
wire   [0:0] or_ln657_fu_1038_p2;
wire   [0:0] and_ln657_1_fu_1152_p2;
wire   [63:0] select_ln658_fu_1051_p3;
wire   [63:0] bitcast_ln521_fu_1113_p1;
wire   [63:0] select_ln407_fu_917_p3;
wire   [63:0] select_ln657_fu_1158_p3;
wire   [0:0] xor_ln964_fu_924_p2;
wire   [0:0] and_ln460_fu_1174_p2;
wire   [0:0] icmp_ln844_fu_1059_p2;
wire   [0:0] xor_ln657_fu_1192_p2;
wire   [0:0] and_ln844_fu_1198_p2;
wire   [0:0] and_ln844_1_fu_1204_p2;
wire   [0:0] and_ln467_3_fu_1186_p2;
wire   [0:0] or_ln844_fu_1210_p2;
wire   [0:0] and_ln460_1_fu_1180_p2;
wire   [0:0] or_ln844_1_fu_1224_p2;
wire   [63:0] select_ln844_1_fu_1216_p3;
wire   [63:0] select_ln407_1_fu_1166_p3;
wire   [14:0] grp_fu_1238_p1;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to11;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [78:0] r_V_14_fu_746_p00;
wire   [78:0] r_V_14_fu_746_p10;
wire   [92:0] r_V_15_fu_818_p00;
wire   [92:0] r_V_15_fu_818_p10;
wire   [99:0] r_V_19_fu_892_p00;
wire   [99:0] r_V_19_fu_892_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
end

inPlaceNTT_DIT_pow_generic_double_s_pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58jbC #(
    .DataWidth( 58 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_address0),
    .ce0(pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0),
    .q0(pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_q0)
);

inPlaceNTT_DIT_pow_generic_double_s_pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0kbM #(
    .DataWidth( 26 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address0),
    .ce0(pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0),
    .q0(pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q0),
    .address1(pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address1),
    .ce1(pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce1),
    .q1(pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q1)
);

inPlaceNTT_DIT_pow_generic_double_s_pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0lbW #(
    .DataWidth( 42 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address0),
    .ce0(pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0),
    .q0(pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q0)
);

inPlaceNTT_DIT_mul_54s_67ns_120_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 54 ),
    .din1_WIDTH( 67 ),
    .dout_WIDTH( 120 ))
mul_54s_67ns_120_1_1_U31(
    .din0(e_frac_V_2_reg_1270),
    .din1(m_frac_l_V_fu_320_p1),
    .dout(m_frac_l_V_fu_320_p2)
);

inPlaceNTT_DIT_mul_13s_71s_71_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 71 ),
    .dout_WIDTH( 71 ))
mul_13s_71s_71_1_1_U32(
    .din0(ret_V_8_reg_1326),
    .din1(71'd1636647506585939924452),
    .dout(r_V_12_fu_633_p2)
);

inPlaceNTT_DIT_mul_43ns_36ns_79_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 43 ),
    .din1_WIDTH( 36 ),
    .dout_WIDTH( 79 ))
mul_43ns_36ns_79_1_1_U33(
    .din0(r_V_14_fu_746_p0),
    .din1(r_V_14_fu_746_p1),
    .dout(r_V_14_fu_746_p2)
);

inPlaceNTT_DIT_mul_49ns_44ns_93_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 49 ),
    .din1_WIDTH( 44 ),
    .dout_WIDTH( 93 ))
mul_49ns_44ns_93_1_1_U34(
    .din0(r_V_15_fu_818_p0),
    .din1(r_V_15_fu_818_p1),
    .dout(r_V_15_fu_818_p2)
);

inPlaceNTT_DIT_mul_50ns_50ns_100_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 50 ),
    .din1_WIDTH( 50 ),
    .dout_WIDTH( 100 ))
mul_50ns_50ns_100_1_1_U35(
    .din0(r_V_19_fu_892_p0),
    .din1(r_V_19_fu_892_p1),
    .dout(r_V_19_fu_892_p2)
);

inPlaceNTT_DIT_mac_muladd_16s_15ns_19s_31_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 19 ),
    .dout_WIDTH( 31 ))
mac_muladd_16s_15ns_19s_31_4_1_U36(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(m_fix_hi_V_fu_528_p4),
    .din1(grp_fu_1238_p1),
    .din2(rhs_fu_572_p3),
    .ce(1'b1),
    .dout(grp_fu_1238_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        Z2_V_reg_1338 <= {{m_diff_V_fu_649_p2[50:43]}};
        Z2_V_reg_1338_pp0_iter7_reg <= Z2_V_reg_1338;
        Z2_V_reg_1338_pp0_iter8_reg <= Z2_V_reg_1338_pp0_iter7_reg;
        Z2_V_reg_1338_pp0_iter9_reg <= Z2_V_reg_1338_pp0_iter8_reg;
        Z3_V_reg_1345 <= {{m_diff_V_fu_649_p2[42:35]}};
        Z3_V_reg_1345_pp0_iter7_reg <= Z3_V_reg_1345;
        Z4_reg_1350 <= Z4_fu_684_p1;
        add_ln657_reg_1381 <= add_ln657_fu_766_p2;
        exp_Z1P_m_1_V_reg_1416 <= {{exp_Z1P_m_1_l_V_fu_860_p2[51:2]}};
        exp_Z1_V_reg_1411 <= pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_q0;
        exp_Z1_V_reg_1411_pp0_iter11_reg <= exp_Z1_V_reg_1411;
        exp_Z1_hi_V_reg_1421 <= {{pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_q0[57:8]}};
        exp_Z2P_m_1_V_reg_1396 <= exp_Z2P_m_1_V_fu_785_p2;
        icmp_ln1453_reg_1316 <= icmp_ln1453_fu_566_p2;
        icmp_ln1453_reg_1316_pp0_iter10_reg <= icmp_ln1453_reg_1316_pp0_iter9_reg;
        icmp_ln1453_reg_1316_pp0_iter11_reg <= icmp_ln1453_reg_1316_pp0_iter10_reg;
        icmp_ln1453_reg_1316_pp0_iter3_reg <= icmp_ln1453_reg_1316;
        icmp_ln1453_reg_1316_pp0_iter4_reg <= icmp_ln1453_reg_1316_pp0_iter3_reg;
        icmp_ln1453_reg_1316_pp0_iter5_reg <= icmp_ln1453_reg_1316_pp0_iter4_reg;
        icmp_ln1453_reg_1316_pp0_iter6_reg <= icmp_ln1453_reg_1316_pp0_iter5_reg;
        icmp_ln1453_reg_1316_pp0_iter7_reg <= icmp_ln1453_reg_1316_pp0_iter6_reg;
        icmp_ln1453_reg_1316_pp0_iter8_reg <= icmp_ln1453_reg_1316_pp0_iter7_reg;
        icmp_ln1453_reg_1316_pp0_iter9_reg <= icmp_ln1453_reg_1316_pp0_iter8_reg;
        icmp_ln657_reg_1311 <= icmp_ln657_fu_560_p2;
        icmp_ln657_reg_1311_pp0_iter10_reg <= icmp_ln657_reg_1311_pp0_iter9_reg;
        icmp_ln657_reg_1311_pp0_iter11_reg <= icmp_ln657_reg_1311_pp0_iter10_reg;
        icmp_ln657_reg_1311_pp0_iter3_reg <= icmp_ln657_reg_1311;
        icmp_ln657_reg_1311_pp0_iter4_reg <= icmp_ln657_reg_1311_pp0_iter3_reg;
        icmp_ln657_reg_1311_pp0_iter5_reg <= icmp_ln657_reg_1311_pp0_iter4_reg;
        icmp_ln657_reg_1311_pp0_iter6_reg <= icmp_ln657_reg_1311_pp0_iter5_reg;
        icmp_ln657_reg_1311_pp0_iter7_reg <= icmp_ln657_reg_1311_pp0_iter6_reg;
        icmp_ln657_reg_1311_pp0_iter8_reg <= icmp_ln657_reg_1311_pp0_iter7_reg;
        icmp_ln657_reg_1311_pp0_iter9_reg <= icmp_ln657_reg_1311_pp0_iter8_reg;
        icmp_ln824_1_reg_1264_pp0_iter10_reg <= icmp_ln824_1_reg_1264_pp0_iter9_reg;
        icmp_ln824_1_reg_1264_pp0_iter11_reg <= icmp_ln824_1_reg_1264_pp0_iter10_reg;
        icmp_ln824_1_reg_1264_pp0_iter2_reg <= icmp_ln824_1_reg_1264_pp0_iter1_reg;
        icmp_ln824_1_reg_1264_pp0_iter3_reg <= icmp_ln824_1_reg_1264_pp0_iter2_reg;
        icmp_ln824_1_reg_1264_pp0_iter4_reg <= icmp_ln824_1_reg_1264_pp0_iter3_reg;
        icmp_ln824_1_reg_1264_pp0_iter5_reg <= icmp_ln824_1_reg_1264_pp0_iter4_reg;
        icmp_ln824_1_reg_1264_pp0_iter6_reg <= icmp_ln824_1_reg_1264_pp0_iter5_reg;
        icmp_ln824_1_reg_1264_pp0_iter7_reg <= icmp_ln824_1_reg_1264_pp0_iter6_reg;
        icmp_ln824_1_reg_1264_pp0_iter8_reg <= icmp_ln824_1_reg_1264_pp0_iter7_reg;
        icmp_ln824_1_reg_1264_pp0_iter9_reg <= icmp_ln824_1_reg_1264_pp0_iter8_reg;
        icmp_ln824_reg_1290 <= icmp_ln824_fu_340_p2;
        icmp_ln824_reg_1290_pp0_iter10_reg <= icmp_ln824_reg_1290_pp0_iter9_reg;
        icmp_ln824_reg_1290_pp0_iter11_reg <= icmp_ln824_reg_1290_pp0_iter10_reg;
        icmp_ln824_reg_1290_pp0_iter3_reg <= icmp_ln824_reg_1290;
        icmp_ln824_reg_1290_pp0_iter4_reg <= icmp_ln824_reg_1290_pp0_iter3_reg;
        icmp_ln824_reg_1290_pp0_iter5_reg <= icmp_ln824_reg_1290_pp0_iter4_reg;
        icmp_ln824_reg_1290_pp0_iter6_reg <= icmp_ln824_reg_1290_pp0_iter5_reg;
        icmp_ln824_reg_1290_pp0_iter7_reg <= icmp_ln824_reg_1290_pp0_iter6_reg;
        icmp_ln824_reg_1290_pp0_iter8_reg <= icmp_ln824_reg_1290_pp0_iter7_reg;
        icmp_ln824_reg_1290_pp0_iter9_reg <= icmp_ln824_reg_1290_pp0_iter8_reg;
        m_diff_hi_V_reg_1333 <= {{m_diff_V_fu_649_p2[58:51]}};
        m_diff_hi_V_reg_1333_pp0_iter7_reg <= m_diff_hi_V_reg_1333;
        m_diff_hi_V_reg_1333_pp0_iter8_reg <= m_diff_hi_V_reg_1333_pp0_iter7_reg;
        m_frac_l_V_reg_1275_pp0_iter10_reg <= m_frac_l_V_reg_1275_pp0_iter9_reg;
        m_frac_l_V_reg_1275_pp0_iter11_reg <= m_frac_l_V_reg_1275_pp0_iter10_reg;
        m_frac_l_V_reg_1275_pp0_iter2_reg <= m_frac_l_V_reg_1275;
        m_frac_l_V_reg_1275_pp0_iter3_reg <= m_frac_l_V_reg_1275_pp0_iter2_reg;
        m_frac_l_V_reg_1275_pp0_iter4_reg <= m_frac_l_V_reg_1275_pp0_iter3_reg;
        m_frac_l_V_reg_1275_pp0_iter5_reg <= m_frac_l_V_reg_1275_pp0_iter4_reg;
        m_frac_l_V_reg_1275_pp0_iter6_reg <= m_frac_l_V_reg_1275_pp0_iter5_reg;
        m_frac_l_V_reg_1275_pp0_iter7_reg <= m_frac_l_V_reg_1275_pp0_iter6_reg;
        m_frac_l_V_reg_1275_pp0_iter8_reg <= m_frac_l_V_reg_1275_pp0_iter7_reg;
        m_frac_l_V_reg_1275_pp0_iter9_reg <= m_frac_l_V_reg_1275_pp0_iter8_reg;
        p_Result_7_reg_1249_pp0_iter10_reg <= p_Result_7_reg_1249_pp0_iter9_reg;
        p_Result_7_reg_1249_pp0_iter11_reg <= p_Result_7_reg_1249_pp0_iter10_reg;
        p_Result_7_reg_1249_pp0_iter2_reg <= p_Result_7_reg_1249_pp0_iter1_reg;
        p_Result_7_reg_1249_pp0_iter3_reg <= p_Result_7_reg_1249_pp0_iter2_reg;
        p_Result_7_reg_1249_pp0_iter4_reg <= p_Result_7_reg_1249_pp0_iter3_reg;
        p_Result_7_reg_1249_pp0_iter5_reg <= p_Result_7_reg_1249_pp0_iter4_reg;
        p_Result_7_reg_1249_pp0_iter6_reg <= p_Result_7_reg_1249_pp0_iter5_reg;
        p_Result_7_reg_1249_pp0_iter7_reg <= p_Result_7_reg_1249_pp0_iter6_reg;
        p_Result_7_reg_1249_pp0_iter8_reg <= p_Result_7_reg_1249_pp0_iter7_reg;
        p_Result_7_reg_1249_pp0_iter9_reg <= p_Result_7_reg_1249_pp0_iter8_reg;
        p_Result_9_reg_1296 <= select_ln578_fu_520_p3[32'd129];
        p_Result_9_reg_1296_pp0_iter3_reg <= p_Result_9_reg_1296;
        r_V_19_reg_1426 <= r_V_19_fu_892_p2;
        ret_V_10_reg_1376[25 : 0] <= ret_V_10_fu_731_p4[25 : 0];
ret_V_10_reg_1376[42 : 35] <= ret_V_10_fu_731_p4[42 : 35];
        ret_V_8_reg_1326 <= ret_V_8_fu_622_p3;
        ret_V_8_reg_1326_pp0_iter10_reg <= ret_V_8_reg_1326_pp0_iter9_reg;
        ret_V_8_reg_1326_pp0_iter11_reg <= ret_V_8_reg_1326_pp0_iter10_reg;
        ret_V_8_reg_1326_pp0_iter6_reg <= ret_V_8_reg_1326;
        ret_V_8_reg_1326_pp0_iter7_reg <= ret_V_8_reg_1326_pp0_iter6_reg;
        ret_V_8_reg_1326_pp0_iter8_reg <= ret_V_8_reg_1326_pp0_iter7_reg;
        ret_V_8_reg_1326_pp0_iter9_reg <= ret_V_8_reg_1326_pp0_iter8_reg;
        ret_V_9_reg_1365 <= ret_V_9_fu_725_p2;
        tmp_4_reg_1401 <= {{pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q0[41:2]}};
        trunc_ln2_reg_1306 <= {{select_ln578_fu_520_p3[117:59]}};
        trunc_ln2_reg_1306_pp0_iter3_reg <= trunc_ln2_reg_1306;
        trunc_ln2_reg_1306_pp0_iter4_reg <= trunc_ln2_reg_1306_pp0_iter3_reg;
        trunc_ln2_reg_1306_pp0_iter5_reg <= trunc_ln2_reg_1306_pp0_iter4_reg;
        trunc_ln657_5_reg_1406 <= {{r_V_15_fu_818_p2[92:57]}};
        y_is_0_reg_1284 <= y_is_0_fu_335_p2;
        y_is_0_reg_1284_pp0_iter10_reg <= y_is_0_reg_1284_pp0_iter9_reg;
        y_is_0_reg_1284_pp0_iter11_reg <= y_is_0_reg_1284_pp0_iter10_reg;
        y_is_0_reg_1284_pp0_iter3_reg <= y_is_0_reg_1284;
        y_is_0_reg_1284_pp0_iter4_reg <= y_is_0_reg_1284_pp0_iter3_reg;
        y_is_0_reg_1284_pp0_iter5_reg <= y_is_0_reg_1284_pp0_iter4_reg;
        y_is_0_reg_1284_pp0_iter6_reg <= y_is_0_reg_1284_pp0_iter5_reg;
        y_is_0_reg_1284_pp0_iter7_reg <= y_is_0_reg_1284_pp0_iter6_reg;
        y_is_0_reg_1284_pp0_iter8_reg <= y_is_0_reg_1284_pp0_iter7_reg;
        y_is_0_reg_1284_pp0_iter9_reg <= y_is_0_reg_1284_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        e_frac_V_2_reg_1270 <= e_frac_V_2_fu_309_p3;
        icmp_ln824_1_reg_1264 <= icmp_ln824_1_fu_289_p2;
        icmp_ln824_1_reg_1264_pp0_iter1_reg <= icmp_ln824_1_reg_1264;
        m_frac_l_V_reg_1275 <= m_frac_l_V_fu_320_p2;
        p_Result_7_reg_1249 <= data_V_fu_263_p1[32'd63];
        p_Result_7_reg_1249_pp0_iter1_reg <= p_Result_7_reg_1249;
        tmp_16_reg_1256 <= {{data_V_fu_263_p1[62:52]}};
        tmp_16_reg_1256_pp0_iter1_reg <= tmp_16_reg_1256;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        f_Z3_reg_1371 <= pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to11 = 1'b1;
    end else begin
        ap_idle_pp0_0to11 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to11 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 = 1'b1;
    end else begin
        pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 = 1'b1;
    end else begin
        pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 = 1'b1;
    end else begin
        pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce1 = 1'b1;
    end else begin
        pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Z3_V_fu_674_p4 = {{m_diff_V_fu_649_p2[42:35]}};

assign Z4_fu_684_p1 = m_diff_V_fu_649_p2[34:0];

assign Z4_ind_fu_688_p4 = {{m_diff_V_fu_649_p2[34:27]}};

assign add_ln1146_1_fu_986_p2 = (trunc_ln1146_1_fu_972_p3 + zext_ln1146_4_fu_965_p1);

assign add_ln1146_2_fu_992_p2 = (trunc_ln3_fu_957_p3 + zext_ln1146_3_fu_950_p1);

assign add_ln657_2_fu_851_p2 = (exp_Z2P_m_1_V_reg_1396 + zext_ln657_4_fu_848_p1);

assign add_ln657_fu_766_p2 = (ret_V_9_reg_1365 + zext_ln657_2_fu_762_p1);

assign and_ln460_1_fu_1180_p2 = (y_is_inf_fu_898_p2 & and_ln460_fu_1174_p2);

assign and_ln460_fu_1174_p2 = (xor_ln964_fu_924_p2 & xor_ln407_fu_1117_p2);

assign and_ln467_1_fu_1140_p2 = (xor_ln467_fu_1134_p2 & xor_ln407_fu_1117_p2);

assign and_ln467_2_fu_1146_p2 = (or_ln460_fu_1129_p2 & and_ln467_1_fu_1140_p2);

assign and_ln467_3_fu_1186_p2 = (xor_ln407_fu_1117_p2 & and_ln467_fu_929_p2);

assign and_ln467_fu_929_p2 = (y_is_inf_fu_898_p2 & p_Result_7_reg_1249_pp0_iter11_reg);

assign and_ln657_1_fu_1152_p2 = (or_ln657_fu_1038_p2 & and_ln467_2_fu_1146_p2);

assign and_ln657_fu_1018_p2 = (icmp_ln657_reg_1311_pp0_iter11_reg & icmp_ln1453_reg_1316_pp0_iter11_reg);

assign and_ln844_1_fu_1204_p2 = (and_ln844_fu_1198_p2 & and_ln467_2_fu_1146_p2);

assign and_ln844_fu_1198_p2 = (xor_ln657_fu_1192_p2 & icmp_ln844_fu_1059_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return = ((or_ln844_1_fu_1224_p2[0:0] == 1'b1) ? select_ln844_1_fu_1216_p3 : select_ln407_1_fu_1166_p3);

assign bitcast_ln521_fu_1113_p1 = p_Result_10_fu_1103_p4;

assign data_V_fu_263_p1 = exp;

assign e_frac_V_1_fu_303_p2 = (54'd0 - p_Result_8_fu_295_p3);

assign e_frac_V_2_fu_309_p3 = ((p_Result_7_fu_267_p3[0:0] == 1'b1) ? e_frac_V_1_fu_303_p2 : p_Result_8_fu_295_p3);

assign exp_Z1P_m_1_l_V_fu_860_p2 = (zext_ln657_5_fu_856_p1 + zext_ln1146_1_fu_844_p1);

assign exp_Z2P_m_1_V_fu_785_p2 = (zext_ln657_3_fu_782_p1 + zext_ln1146_fu_779_p1);

assign exp_Z2_m_1_V_fu_801_p4 = {{{Z2_V_reg_1338_pp0_iter8_reg}, {1'd0}}, {tmp_4_fu_791_p4}};

assign grp_fu_1238_p1 = 31'd23637;

assign icmp_ln1453_fu_566_p2 = ((r_V_17_fu_431_p3 != sext_ln568_1_fu_348_p1) ? 1'b1 : 1'b0);

assign icmp_ln657_fu_560_p2 = (($signed(m_exp_fu_329_p2) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign icmp_ln805_fu_602_p2 = ((trunc_ln805_fu_599_p1 == 18'd0) ? 1'b1 : 1'b0);

assign icmp_ln824_1_fu_289_p2 = ((tmp_17_fu_285_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln824_fu_340_p2 = ((tmp_16_reg_1256_pp0_iter1_reg == 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln840_fu_1032_p2 = (($signed(tmp_13_fu_1022_p4) > $signed(3'd0)) ? 1'b1 : 1'b0);

assign icmp_ln844_fu_1059_p2 = (($signed(r_exp_V_2_fu_1011_p3) < $signed(13'd7170)) ? 1'b1 : 1'b0);

assign isNeg_1_fu_465_p3 = sub_ln1311_fu_359_p2[32'd10];

assign isNeg_fu_351_p3 = m_exp_fu_329_p2[32'd11];

assign lhs_V_1_fu_834_p5 = {{{{Z2_V_reg_1338_pp0_iter9_reg}, {1'd0}}, {tmp_4_reg_1401}}, {2'd0}};

assign lhs_V_4_fu_939_p3 = {{ret_V_11_fu_934_p2}, {49'd0}};

assign m_diff_V_fu_649_p2 = (trunc_ln2_reg_1306_pp0_iter5_reg - trunc_ln657_1_fu_639_p4);

assign m_exp_fu_329_p2 = ($signed(zext_ln510_fu_326_p1) + $signed(12'd3073));

assign m_fix_hi_V_fu_528_p4 = {{select_ln578_fu_520_p3[129:114]}};

assign m_fix_l_fu_407_p3 = ((isNeg_fu_351_p3[0:0] == 1'b1) ? sext_ln1286_fu_393_p1 : trunc_ln1286_1_fu_403_p1);

assign m_frac_l_V_fu_320_p1 = 120'd51145234580810622639;

assign or_ln407_fu_912_p2 = (y_is_NaN_fu_907_p2 | y_is_0_reg_1284_pp0_iter11_reg);

assign or_ln460_fu_1129_p2 = (xor_ln460_fu_1123_p2 | p_Result_7_reg_1249_pp0_iter11_reg);

assign or_ln657_fu_1038_p2 = (icmp_ln840_fu_1032_p2 | and_ln657_fu_1018_p2);

assign or_ln844_1_fu_1224_p2 = (or_ln844_fu_1210_p2 | and_ln460_1_fu_1180_p2);

assign or_ln844_fu_1210_p2 = (and_ln844_1_fu_1204_p2 | and_ln467_3_fu_1186_p2);

assign out_exp_V_fu_1097_p2 = (trunc_ln167_fu_1093_p1 + 11'd1023);

assign p_Result_10_fu_1103_p4 = {{{{1'd0}, {out_exp_V_fu_1097_p2}}}, {tmp_18_fu_1085_p3}};

assign p_Result_7_fu_267_p3 = data_V_fu_263_p1[32'd63];

assign p_Result_8_fu_295_p3 = {{2'd1}, {tmp_17_fu_285_p1}};

assign p_Result_s_fu_592_p3 = grp_fu_1238_p3[32'd30];

assign pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_address0 = zext_ln488_fu_775_p1;

assign pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address0 = zext_ln488_3_fu_771_p1;

assign pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address0 = zext_ln488_2_fu_703_p1;

assign pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address1 = zext_ln488_1_fu_698_p1;

assign r_V_14_fu_746_p0 = r_V_14_fu_746_p00;

assign r_V_14_fu_746_p00 = ret_V_10_fu_731_p4;

assign r_V_14_fu_746_p1 = r_V_14_fu_746_p10;

assign r_V_14_fu_746_p10 = ret_V_9_reg_1365;

assign r_V_15_fu_818_p0 = r_V_15_fu_818_p00;

assign r_V_15_fu_818_p00 = exp_Z2_m_1_V_fu_801_p4;

assign r_V_15_fu_818_p1 = r_V_15_fu_818_p10;

assign r_V_15_fu_818_p10 = exp_Z2P_m_1_V_fu_785_p2;

assign r_V_17_fu_431_p3 = ((isNeg_fu_351_p3[0:0] == 1'b1) ? r_V_2_fu_419_p2 : r_V_3_fu_425_p2);

assign r_V_19_fu_892_p0 = r_V_19_fu_892_p00;

assign r_V_19_fu_892_p00 = exp_Z1P_m_1_V_reg_1416;

assign r_V_19_fu_892_p1 = r_V_19_fu_892_p10;

assign r_V_19_fu_892_p10 = exp_Z1_hi_V_reg_1421;

assign r_V_1_fu_397_p2 = sext_ln568_fu_345_p1 << sh_prom_i_i429_cast_cast_cast_cast_fu_380_p1;

assign r_V_2_fu_419_p2 = m_fix_l_fu_407_p3 << sh_prom_i_i402_cast_cast_cast_cast_fu_415_p1;

assign r_V_3_fu_425_p2 = $signed(m_fix_l_fu_407_p3) >>> sh_prom_i_i402_cast_cast_cast_cast_fu_415_p1;

assign r_V_5_fu_455_p2 = sext_ln568_fu_345_p1 << zext_ln1253_fu_451_p1;

assign r_V_6_fu_489_p2 = sext_ln568_fu_345_p1 << zext_ln1253_1_fu_485_p1;

assign r_V_7_fu_503_p2 = $signed(m_frac_l_V_reg_1275) >>> sext_ln1253_1cast_fu_499_p1;

assign r_V_8_fu_512_p3 = ((isNeg_1_fu_465_p3[0:0] == 1'b1) ? trunc_ln1252_fu_495_p1 : sext_ln1252_fu_508_p1);

assign r_V_fu_388_p2 = $signed(m_frac_l_V_reg_1275) >>> sh_prom_i_i429_cast_cast_castcast_fu_384_p1;

assign r_exp_V_2_fu_1011_p3 = ((tmp_11_fu_998_p3[0:0] == 1'b1) ? ret_V_8_reg_1326_pp0_iter11_reg : r_exp_V_fu_1006_p2);

assign r_exp_V_fu_1006_p2 = ($signed(ret_V_8_reg_1326_pp0_iter11_reg) + $signed(13'd8191));

assign r_fu_708_p4 = {{pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q1[25:16]}};

assign ret_V_10_fu_731_p4 = {{{Z3_V_reg_1345_pp0_iter7_reg}, {9'd0}}, {f_Z3_reg_1371}};

assign ret_V_11_fu_934_p2 = (exp_Z1_V_reg_1411_pp0_iter11_reg + 58'd16);

assign ret_V_6_fu_980_p2 = (lhs_V_4_fu_939_p3 + zext_ln1146_2_fu_947_p1);

assign ret_V_8_fu_622_p3 = ((p_Result_s_fu_592_p3[0:0] == 1'b1) ? select_ln804_fu_614_p3 : ret_V_cast_fu_583_p4);

assign ret_V_9_fu_725_p2 = (zext_ln657_fu_718_p1 + zext_ln657_1_fu_721_p1);

assign ret_V_cast_fu_583_p4 = {{grp_fu_1238_p3[30:18]}};

assign ret_V_fu_608_p2 = (ret_V_cast_fu_583_p4 + 13'd1);

assign rhs_fu_572_p3 = {{p_Result_9_reg_1296_pp0_iter3_reg}, {18'd131072}};

assign select_ln407_1_fu_1166_p3 = ((or_ln407_fu_912_p2[0:0] == 1'b1) ? select_ln407_fu_917_p3 : select_ln657_fu_1158_p3);

assign select_ln407_fu_917_p3 = ((y_is_0_reg_1284_pp0_iter11_reg[0:0] == 1'b1) ? 64'd4607182418800017408 : 64'd9223372036854775807);

assign select_ln578_fu_520_p3 = ((tmp_7_fu_439_p3[0:0] == 1'b1) ? r_V_8_fu_512_p3 : trunc_ln1286_2_fu_461_p1);

assign select_ln657_fu_1158_p3 = ((and_ln657_1_fu_1152_p2[0:0] == 1'b1) ? select_ln658_fu_1051_p3 : bitcast_ln521_fu_1113_p1);

assign select_ln658_fu_1051_p3 = ((tmp_14_fu_1044_p3[0:0] == 1'b1) ? 64'd0 : 64'd9218868437227405312);

assign select_ln804_fu_614_p3 = ((icmp_ln805_fu_602_p2[0:0] == 1'b1) ? ret_V_cast_fu_583_p4 : ret_V_fu_608_p2);

assign select_ln844_1_fu_1216_p3 = ((or_ln844_fu_1210_p2[0:0] == 1'b1) ? 64'd0 : 64'd9218868437227405312);

assign sext_ln1252_fu_508_p1 = $signed(r_V_7_fu_503_p2);

assign sext_ln1253_1_fu_481_p1 = $signed(ush_2_fu_473_p3);

assign sext_ln1253_1cast_fu_499_p1 = $unsigned(sext_ln1253_1_fu_481_p1);

assign sext_ln1253_fu_447_p1 = m_exp_fu_329_p2;

assign sext_ln1286_fu_393_p1 = $signed(r_V_fu_388_p2);

assign sext_ln1311_fu_364_p1 = sub_ln1311_fu_359_p2;

assign sext_ln568_1_fu_348_p1 = m_frac_l_V_reg_1275;

assign sext_ln568_fu_345_p1 = m_frac_l_V_reg_1275;

assign sh_prom_i_i402_cast_cast_cast_cast_fu_415_p1 = $unsigned(sh_prom_i_i429_cast_cast_cast_fu_376_p1);

assign sh_prom_i_i429_cast_cast_cast_cast_fu_380_p1 = $unsigned(sh_prom_i_i429_cast_cast_cast_fu_376_p1);

assign sh_prom_i_i429_cast_cast_cast_fu_376_p1 = $signed(ush_fu_368_p3);

assign sh_prom_i_i429_cast_cast_castcast_fu_384_p1 = $unsigned(sh_prom_i_i429_cast_cast_cast_fu_376_p1);

assign sub_ln1311_fu_359_p2 = (11'd1023 - tmp_16_reg_1256_pp0_iter1_reg);

assign tmp_11_fu_998_p3 = ret_V_6_fu_980_p2[32'd106];

assign tmp_13_fu_1022_p4 = {{r_exp_V_2_fu_1011_p3[12:10]}};

assign tmp_14_fu_1044_p3 = m_frac_l_V_reg_1275_pp0_iter11_reg[32'd119];

assign tmp_17_fu_285_p1 = data_V_fu_263_p1[51:0];

assign tmp_18_fu_1085_p3 = ((tmp_11_fu_998_p3[0:0] == 1'b1) ? tmp_fu_1065_p4 : tmp_1_fu_1075_p4);

assign tmp_1_fu_1075_p4 = {{add_ln1146_1_fu_986_p2[104:53]}};

assign tmp_4_fu_791_p4 = {{pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q0[41:2]}};

assign tmp_7_fu_439_p3 = m_exp_fu_329_p2[32'd11];

assign tmp_fu_1065_p4 = {{add_ln1146_2_fu_992_p2[105:54]}};

assign trunc_ln1146_1_fu_972_p3 = {{trunc_ln1146_2_fu_968_p1}, {49'd0}};

assign trunc_ln1146_2_fu_968_p1 = ret_V_11_fu_934_p2[55:0];

assign trunc_ln1146_fu_953_p1 = ret_V_11_fu_934_p2[56:0];

assign trunc_ln1252_fu_495_p1 = r_V_6_fu_489_p2[129:0];

assign trunc_ln1286_1_fu_403_p1 = r_V_1_fu_397_p2[129:0];

assign trunc_ln1286_2_fu_461_p1 = r_V_5_fu_455_p2[129:0];

assign trunc_ln167_fu_1093_p1 = r_exp_V_2_fu_1011_p3[10:0];

assign trunc_ln3_fu_957_p3 = {{trunc_ln1146_fu_953_p1}, {49'd0}};

assign trunc_ln657_1_fu_639_p4 = {{r_V_12_fu_633_p2[70:12]}};

assign trunc_ln657_4_fu_752_p4 = {{r_V_14_fu_746_p2[78:59]}};

assign trunc_ln805_fu_599_p1 = grp_fu_1238_p3[17:0];

assign ush_2_fu_473_p3 = ((isNeg_1_fu_465_p3[0:0] == 1'b1) ? m_exp_fu_329_p2 : sext_ln1311_fu_364_p1);

assign ush_fu_368_p3 = ((isNeg_fu_351_p3[0:0] == 1'b1) ? sext_ln1311_fu_364_p1 : m_exp_fu_329_p2);

assign xor_ln407_fu_1117_p2 = (or_ln407_fu_912_p2 ^ 1'd1);

assign xor_ln460_fu_1123_p2 = (y_is_inf_fu_898_p2 ^ 1'd1);

assign xor_ln467_fu_1134_p2 = (1'd1 ^ and_ln467_fu_929_p2);

assign xor_ln657_fu_1192_p2 = (or_ln657_fu_1038_p2 ^ 1'd1);

assign xor_ln828_fu_902_p2 = (icmp_ln824_1_reg_1264_pp0_iter11_reg ^ 1'd1);

assign xor_ln964_fu_924_p2 = (p_Result_7_reg_1249_pp0_iter11_reg ^ 1'd1);

assign y_is_0_fu_335_p2 = ((tmp_16_reg_1256_pp0_iter1_reg == 11'd0) ? 1'b1 : 1'b0);

assign y_is_NaN_fu_907_p2 = (xor_ln828_fu_902_p2 & icmp_ln824_reg_1290_pp0_iter11_reg);

assign y_is_inf_fu_898_p2 = (icmp_ln824_reg_1290_pp0_iter11_reg & icmp_ln824_1_reg_1264_pp0_iter11_reg);

assign zext_ln1146_1_fu_844_p1 = lhs_V_1_fu_834_p5;

assign zext_ln1146_2_fu_947_p1 = r_V_19_reg_1426;

assign zext_ln1146_3_fu_950_p1 = r_V_19_reg_1426;

assign zext_ln1146_4_fu_965_p1 = r_V_19_reg_1426;

assign zext_ln1146_fu_779_p1 = ret_V_10_reg_1376;

assign zext_ln1253_1_fu_485_p1 = $unsigned(sext_ln1253_1_fu_481_p1);

assign zext_ln1253_fu_451_p1 = $unsigned(sext_ln1253_fu_447_p1);

assign zext_ln488_1_fu_698_p1 = Z4_ind_fu_688_p4;

assign zext_ln488_2_fu_703_p1 = Z3_V_fu_674_p4;

assign zext_ln488_3_fu_771_p1 = Z2_V_reg_1338_pp0_iter7_reg;

assign zext_ln488_fu_775_p1 = m_diff_hi_V_reg_1333_pp0_iter8_reg;

assign zext_ln510_fu_326_p1 = tmp_16_reg_1256_pp0_iter1_reg;

assign zext_ln657_1_fu_721_p1 = r_fu_708_p4;

assign zext_ln657_2_fu_762_p1 = trunc_ln657_4_fu_752_p4;

assign zext_ln657_3_fu_782_p1 = add_ln657_reg_1381;

assign zext_ln657_4_fu_848_p1 = trunc_ln657_5_reg_1406;

assign zext_ln657_5_fu_856_p1 = add_ln657_2_fu_851_p2;

assign zext_ln657_fu_718_p1 = Z4_reg_1350;

always @ (posedge ap_clk) begin
    ret_V_10_reg_1376[34:26] <= 9'b000000000;
end

endmodule //inPlaceNTT_DIT_pow_generic_double_s
